-- MySQL Script generated by MySQL Workbench
-- 03/19/16 13:20:30
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema medienverwaltung
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema medienverwaltung
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `medienverwaltung` DEFAULT CHARACTER SET utf8 ;
USE `medienverwaltung` ;

-- -----------------------------------------------------
-- Table `medienverwaltung`.`mediabase`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medienverwaltung`.`mediabase` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `titel` VARCHAR(100) NOT NULL,
  `erscheinungsdatum` DATE NOT NULL,
  `bemerkung` VARCHAR(100) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medienverwaltung`.`genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medienverwaltung`.`genre` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `bezeichnung` VARCHAR(80) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `BEZ_UNIQUE` (`bezeichnung` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medienverwaltung`.`musik`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medienverwaltung`.`musik` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `mediabase_id` INT NOT NULL,
  `live` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `BEZ_UNIQUE` (`mediabase_id` ASC),
  CONSTRAINT `FK_MUSIK_MDBASE`
    FOREIGN KEY (`mediabase_id`)
    REFERENCES `medienverwaltung`.`mediabase` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medienverwaltung`.`bild`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medienverwaltung`.`bild` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `mediabase_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `bild_mdb_id_UNIQUE` (`mediabase_id` ASC),
  CONSTRAINT `FK_BILD_MDB`
    FOREIGN KEY (`mediabase_id`)
    REFERENCES `medienverwaltung`.`mediabase` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medienverwaltung`.`spiel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medienverwaltung`.`spiel` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `mediabase_id` INT NOT NULL,
  `sprache` VARCHAR(20) NOT NULL,
  `betriebssystem` VARCHAR(100) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `BEZ_UNIQUE` (`mediabase_id` ASC),
  CONSTRAINT `FK_SPIEL_MDBASE`
    FOREIGN KEY (`mediabase_id`)
    REFERENCES `medienverwaltung`.`mediabase` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medienverwaltung`.`hoerbuch`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medienverwaltung`.`hoerbuch` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `mediabase_id` INT NOT NULL,
  `sprache` VARCHAR(20) NOT NULL,
  `art` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `BEZ_UNIQUE` (`mediabase_id` ASC),
  CONSTRAINT `FK_HOERBUCH_MDBASE`
    FOREIGN KEY (`mediabase_id`)
    REFERENCES `medienverwaltung`.`mediabase` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medienverwaltung`.`buch`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medienverwaltung`.`buch` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `mediabase_id` INT NOT NULL,
  `sprache` VARCHAR(20) NOT NULL,
  `art` INT NOT NULL,
  `auflage` SMALLINT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `BEZ_UNIQUE` (`mediabase_id` ASC),
  CONSTRAINT `FK_BUCH_MDBASE`
    FOREIGN KEY (`mediabase_id`)
    REFERENCES `medienverwaltung`.`mediabase` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medienverwaltung`.`film`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medienverwaltung`.`film` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `mediabase_id` INT NOT NULL,
  `sprache` VARCHAR(20) NOT NULL,
  `art` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `BEZ_UNIQUE` (`mediabase_id` ASC),
  CONSTRAINT `FK_FILM_MDBASE`
    FOREIGN KEY (`mediabase_id`)
    REFERENCES `medienverwaltung`.`mediabase` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medienverwaltung`.`mediabaseGenre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medienverwaltung`.`mediabaseGenre` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `mediabase_id` INT NOT NULL,
  `genre_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_MEDIABASEGENRE_MEDIABASE_idx` (`mediabase_id` ASC),
  INDEX `FK_MEDIABASEGENRE_GENRE_idx` (`genre_id` ASC),
  CONSTRAINT `FK_MEDIABASEGENRE_MEDIABASE`
    FOREIGN KEY (`mediabase_id`)
    REFERENCES `medienverwaltung`.`mediabase` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_MEDIABASEGENRE_GENRE`
    FOREIGN KEY (`genre_id`)
    REFERENCES `medienverwaltung`.`genre` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medienverwaltung`.`speicherformat`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medienverwaltung`.`speicherformat` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `mediabase_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_SPEICHERFORMAT_1_idx` (`mediabase_id` ASC),
  CONSTRAINT `fk_SPEICHERFORMAT_1`
    FOREIGN KEY (`mediabase_id`)
    REFERENCES `medienverwaltung`.`mediabase` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medienverwaltung`.`speicherort`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medienverwaltung`.`speicherort` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `speicherformat_id` INT NOT NULL,
  `bezeichnung` VARCHAR(40) NOT NULL,
  `bemerkung` VARCHAR(100) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_MEDIASTORAGE_1_idx` (`speicherformat_id` ASC),
  CONSTRAINT `fk_MEDIASTORAGE_1`
    FOREIGN KEY (`speicherformat_id`)
    REFERENCES `medienverwaltung`.`speicherformat` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medienverwaltung`.`festplatte`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medienverwaltung`.`festplatte` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `speicherort_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_FESTPLATTE_MEDIASTORAGE_idx` (`speicherort_id` ASC),
  CONSTRAINT `FK_FESTPLATTE_MEDIASTORAGE`
    FOREIGN KEY (`speicherort_id`)
    REFERENCES `medienverwaltung`.`speicherort` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = '					';


-- -----------------------------------------------------
-- Table `medienverwaltung`.`optisch`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medienverwaltung`.`optisch` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `speicherort_id` INT NOT NULL,
  `zustand` VARCHAR(100) NULL,
  `art` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_FESTPLATTE_MEDIASTORAGE_idx` (`speicherort_id` ASC),
  CONSTRAINT `FK_OPTISCH_MEDIASTORAGE`
    FOREIGN KEY (`speicherort_id`)
    REFERENCES `medienverwaltung`.`speicherort` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medienverwaltung`.`schallplatte`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medienverwaltung`.`schallplatte` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `speicherort_id` INT NOT NULL,
  `zustand` VARCHAR(100) NULL,
  `art` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_FESTPLATTE_MEDIASTORAGE_idx` (`speicherort_id` ASC),
  CONSTRAINT `FK_SCHALLPLATTE_MEDIASTORAGE`
    FOREIGN KEY (`speicherort_id`)
    REFERENCES `medienverwaltung`.`speicherort` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medienverwaltung`.`dia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medienverwaltung`.`dia` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `speicherort_id` INT NOT NULL,
  `zustand` VARCHAR(100) NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_FESTPLATTE_MEDIASTORAGE_idx` (`speicherort_id` ASC),
  CONSTRAINT `FK_DIA_MEDIASTORAGE`
    FOREIGN KEY (`speicherort_id`)
    REFERENCES `medienverwaltung`.`speicherort` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medienverwaltung`.`buchformat`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medienverwaltung`.`buchformat` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `speicherort_id` INT NOT NULL,
  `zustand` VARCHAR(100) NULL,
  `art` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_FESTPLATTE_MEDIASTORAGE_idx` (`speicherort_id` ASC),
  CONSTRAINT `FK_BUCHFORMAT_MEDIASTORAGE`
    FOREIGN KEY (`speicherort_id`)
    REFERENCES `medienverwaltung`.`speicherort` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medienverwaltung`.`kassette`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medienverwaltung`.`kassette` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `speicherort_id` INT NOT NULL,
  `zustand` VARCHAR(100) NULL,
  `art` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_FESTPLATTE_MEDIASTORAGE_idx` (`speicherort_id` ASC),
  CONSTRAINT `FK_KASSETTE_MEDIASTORAGE`
    FOREIGN KEY (`speicherort_id`)
    REFERENCES `medienverwaltung`.`speicherort` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medienverwaltung`.`format_analog`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medienverwaltung`.`format_analog` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `speicherformat_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_format_analog_1_idx` (`speicherformat_id` ASC),
  CONSTRAINT `fk_format_analog_1`
    FOREIGN KEY (`speicherformat_id`)
    REFERENCES `medienverwaltung`.`speicherformat` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medienverwaltung`.`format_digital`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medienverwaltung`.`format_digital` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `speicherformat_id` INT NOT NULL,
  `dateiformat` VARCHAR(45) NOT NULL,
  `qualitaet` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_format_digital_1_idx` (`speicherformat_id` ASC),
  CONSTRAINT `fk_format_digital_1`
    FOREIGN KEY (`speicherformat_id`)
    REFERENCES `medienverwaltung`.`speicherformat` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medienverwaltung`.`person`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medienverwaltung`.`person` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nachname` VARCHAR(45) NULL,
  `vorname` VARCHAR(45) NULL,
  `kuenstlername` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medienverwaltung`.`mediabasePerson`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medienverwaltung`.`mediabasePerson` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `mediabase_id` INT NOT NULL,
  `person_id` INT NOT NULL,
  `art` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_Person_idx` (`person_id` ASC),
  INDEX `FK_Mediabase_idx` (`mediabase_id` ASC),
  CONSTRAINT `FK_Mediabase`
    FOREIGN KEY (`mediabase_id`)
    REFERENCES `medienverwaltung`.`mediabase` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_Person`
    FOREIGN KEY (`person_id`)
    REFERENCES `medienverwaltung`.`person` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
